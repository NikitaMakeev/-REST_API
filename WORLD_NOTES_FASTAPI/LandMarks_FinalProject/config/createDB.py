import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(__file__)))



import asyncio
from sqlalchemy import text
from config.database import async_engine, Base, async_session
from config.database import async_engine, Base, async_session
from models.user import User
from models.landmark import Landmark
from models.photo import Photo
from models.rating import Rating

async def init_db():
    try:
        print("üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ë–î
        async with async_engine.connect() as conn:
            await conn.execute(text("CREATE DATABASE IF NOT EXISTS wwlandmarks"))
            await conn.commit()
            print("‚úî –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞")

        # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü
        async with async_engine.begin() as conn:
            print("üî® –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü...")
            await conn.run_sync(Base.metadata.drop_all)
            await conn.run_sync(Base.metadata.create_all)
            print("‚úî –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã")

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        async with async_session() as session:
            async with session.begin():
                print("üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
                
                # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
                user1 = User(
                    username='user1',
                    email='user1@example.com',
                    password=User.hash_password('user1_123')
                )
                user2 = User(
                    username='user2',
                    email='user2@example.com',
                    password=User.hash_password('user2_123')
                )
                session.add_all([user1, user2])
                await session.flush()

                # –î–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å
                landmark1 = Landmark(
                    name='Eiffel Tower',
                    description='The Eiffel Tower is a wrought-iron lattice tower in Paris, France.',
                    location='Paris',
                    country='France',
                    imageURL='https://example.com/eiffel.jpg',
                    user_id=user1.id
                )
                session.add(landmark1)
                await session.flush()

                # –§–æ—Ç–æ
                photo1 = Photo(
                    url='https://example.com/eiffel_photo.jpg',
                    description='Beautiful view',
                    user_id=user1.id,
                    landmark_id=landmark1.id
                )
                session.add(photo1)

                # –†–µ–π—Ç–∏–Ω–≥
                rating1 = Rating(
                    rating=5,
                    user_id=user1.id,
                    landmark_id=landmark1.id
                )
                session.add(rating1)

        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
        raise

if __name__ == '__main__':
    asyncio.run(init_db())